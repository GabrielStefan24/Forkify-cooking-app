{"id":"node_modules/core-js/internals/get-set-record.js","dependencies":[{"name":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1673900970011},{"name":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1673821183940},{"name":"../internals/a-callable","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\get-set-record.js","resolved":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\a-callable.js"},{"name":"../internals/an-object","loc":{"line":2,"column":23,"index":75},"parent":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\get-set-record.js","resolved":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/function-call","loc":{"line":3,"column":19,"index":121},"parent":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\get-set-record.js","resolved":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/to-integer-or-infinity","loc":{"line":4,"column":34,"index":186},"parent":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\get-set-record.js","resolved":"C:\\Users\\sirbu\\Desktop\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"}],"generated":{"js":"var aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $TypeError = TypeError;\n\nvar SetRecord = function (set, size, has, keys) {\n  this.set = set;\n  this.size = size;\n  this.has = has;\n  this.keys = keys;\n};\n\nSetRecord.prototype = {\n  getIterator: function () {\n    return anObject(call(this.keys, this.set));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize != numSize) throw $TypeError('Invalid size');\n  return new SetRecord(\n    obj,\n    toIntegerOrInfinity(numSize),\n    aCallable(obj.has),\n    aCallable(obj.keys)\n  );\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/internals/get-set-record.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/core-js/internals/get-set-record.js":"var aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $TypeError = TypeError;\n\nvar SetRecord = function (set, size, has, keys) {\n  this.set = set;\n  this.size = size;\n  this.has = has;\n  this.keys = keys;\n};\n\nSetRecord.prototype = {\n  getIterator: function () {\n    return anObject(call(this.keys, this.set));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize != numSize) throw $TypeError('Invalid size');\n  return new SetRecord(\n    obj,\n    toIntegerOrInfinity(numSize),\n    aCallable(obj.has),\n    aCallable(obj.keys)\n  );\n};\n"},"lineCount":39}},"error":null,"hash":"4af60c06e3a75afa8ba03a18b873d39c","cacheData":{"env":{}}}